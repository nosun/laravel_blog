{"version":3,"sources":["jquery-easyvali-1.0.js","activity.js","common.js","component-term-search.js","constant.js","coupon-form.js","page-variables.js","promotion-from.js","sidebar.js","init.js"],"names":[],"mappingslPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACzvHA;AACA;ACDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACtCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"app.js","sourcesContent":["/**\n * easyvali.Form validation.Relying on the JQuery\n *\n * on 1/8/2016\n */\n\n\n/**-------------------------------------------------\n *\n * Example:\n * HTML:<input type=\"text\" class='js-input'>\n *   JS: $('.js-input').easyVali('string',{maxLen:16,minLen:6});\n *\n * ---------------------------------------------------\n */\n\n\n;(function($){\n\n    $.fn.easyVali=function(type,options){\n        var settings= $.extend({\n            maxLen:10,\n            minLen:1\n        }, options||{});\n\n        var thisVal=$(this).val();\n        var validation={\n            required : function(){\n                return $.trim(thisVal).length > 0;\n            },\n            maxLen : function(maxVal){\n                return $.trim(thisVal).length < maxVal;\n            },\n            minLen : function(minVal){\n                return $.trim(thisVal).length > minVal;\n            },\n            length : function(length){\n                return $.trim(thisVal).length == length;\n            },\n            string:function(maxLen,minLen){\n                return (thisVal.length<minLen || thisVal.length>maxLen)?0:1;\n            },\n            number: function () {\n                return thisVal.match(/^[0-9|\\.]+$/);\n            },\n            mobiTel:function(){\n                return thisVal.match(/^((\\+)?[1-9]{1,2})?([-\\s\\.])?((\\(\\d{1,4}\\))|\\d{1,4})(([-\\s\\.])?[0-9]{1,12}){1,2}$/);\n            },\n            zoneCode:function(){\n                return thisVal.match(/^0(\\d{2}|\\d{3})$/);\n            },\n            telephone:function(){\n                return thisVal.match(/^[2-9](\\d{6}|\\d{7})$/);\n            },\n            email:function(){\n                return thisVal.match(/^\\w+([\\-\\+.]\\w+)*\\@\\w+([-.]\\w+)*\\.\\w+([-.]\\w+)*$/);\n            },\n            confirm:function(confirmClass){\n                var $element = $('.'+confirmClass);\n                if($element.length){\n                    return $.trim(thisVal) == $.trim($element.val());\n                }\n                return true;\n            }\n        };\n\n        switch(type){\n            case 'required':\n                return !!validation.required();\n                break;\n            case 'maxLen':\n                return !!validation.maxLen(settings[0]);\n                break;\n            case 'minLen':\n                return !!validation.minLen(settings[0]);\n                break;\n            case 'length':\n                return !!validation.length(settings[0]);\n            case 'string':\n                return !!validation.string(settings.maxLen,settings.minLen);\n                break;\n            case 'number':\n                return !!validation.number();\n                break;\n            case 'mobiTel':\n                return !!validation.mobiTel();\n                break;\n            case 'zoneCode':\n                return !!validation.zoneCode();\n                break;\n            case 'telephone':\n                return !!validation.telephone();\n                break;\n            case 'email':\n                return !!validation.email();\n                break;\n            case 'confirm':\n                return !!validation.confirm(settings[0]);\n                break;\n            default:\n                break;\n        }\n    };\n\n    function getAutoCheckFormModule(opts){\n        var checkKey = function(key){\n            var keyArr = ['required', 'maxLen', 'minLen', 'length', 'number', 'mobiTel', 'zoneCode', 'telephone', 'email','confirm'];\n            return keyArr.indexOf(key) > -1;\n        };\n\n        var parseCheckRules = function(rules){\n            var splitRules = rules.split('|');\n            var parseRules = {};\n            $.each(splitRules, function(index, rule){\n                var splitRule = rule.split(':');\n                if(checkKey(splitRule[0])){\n                    parseRules[splitRule[0]] = splitRule[1] ? splitRule[1].split(',') : '';\n                }\n            });\n            return parseRules;\n        };\n\n        var errorMessageParse = function(errorMessage, key, setting){\n            if(key == 'max'){\n                errorMessage = errorMessage.replace(':max', setting[0]);\n            }else if(key == 'min'){\n                errorMessage = errorMessage.replace(':min', setting[0]);\n            }else if(key == 'confirm'){\n                errorMessage = errorMessage.replace(':confirm', setting[0]);\n            }else if(key == 'maxLen'){\n                errorMessage = errorMessage.replace(':maxLen', setting[0]);\n            }else if(key == 'minLen'){\n                errorMessage = errorMessage.replace(':minLen', setting[0]);\n            }else if(key == 'length'){\n                errorMessage = errorMessage.replace(':length', setting[0]);\n            }\n            return errorMessage;\n        };\n\n        var errorInput = function($element, key, setting){\n            var name = $element.attr('name');\n            var $errorSpan = $('.'+opts.setting.errorPrefix+name);\n            if(opts.setting.inputErrorClass){\n                $element.addClass(opts.setting.inputErrorClass);\n            }\n            if($errorSpan.length){\n                var message = opts.message;\n                if(key in message){\n                    var errorMessage = message[key];\n                    var field = name.replace(/_/g, ' ');\n                    errorMessage = errorMessage.replace(':field', field);\n                    errorMessage = errorMessageParse(errorMessage, key, setting);\n                    $errorSpan.html(errorMessage);\n                    $errorSpan.css('display', 'inline-block');\n                }\n            }\n        };\n\n        var rightInput = function($element){\n            var name = $element.attr('name');\n            var $errorSpan = $('.'+opts.setting.errorPrefix+name);\n            if($errorSpan.length){\n                $errorSpan.html('');\n                $errorSpan.css('display', 'none');\n            }\n        };\n\n        return {\n            parseCheckRules : parseCheckRules,\n            errorInput : errorInput,\n            rightInput : rightInput\n        };\n    };\n\n    var opts = {\n        message : {\n            required : 'The :field is required.',\n            maxLen : 'This maximum length of :field is required :maxLen',\n            minLen : 'This minimum length of :field is required :minLen',\n            length : 'This  length of :field is required :length',\n            number : 'The :field is required to be digital.',\n            mobiTel : 'The :field is required to be mobile.',\n            zoneCode : 'The :field is required to be post code.',\n            telephone : 'The :field is required to be telephone.',\n            email : 'The :field is required to be email.',\n            confirm : 'The :field is required to be matched with :confirm'\n        },\n        setting : {\n            errorPrefix : 'sp_',\n            inputErrorClass : null,\n            fullyVerified : true\n        }\n    };\n\n    $.fn.autoCheckForm = function(checkRules){\n        var message = arguments[1] ? arguments[1] : null;\n        var setting = arguments[2] ? arguments[2] : null;\n        opts.message = $.extend({}, opts.message, message);\n        opts.setting = $.extend({}, opts.setting, setting);\n\n        var module = getAutoCheckFormModule(opts);\n\n        var $checkForm = $(this);\n        var checkInfo = [];\n\n        for (key in checkRules){\n            var $element = $checkForm.find('[name=\"'+key+'\"]');\n            if($element.length){\n                checkInfo.push({\n                    element : $element,\n                    checkRules : module.parseCheckRules(checkRules[key])\n                });\n            }\n        }\n\n        var check = function(){\n            var valid = true;\n            if(checkInfo.length){\n                $.each(checkInfo, function(index, elementCheckInfo){\n                    var $element = elementCheckInfo.element;\n                    var checkRules = elementCheckInfo.checkRules;\n                    for (key in checkRules){\n                        if($element.easyVali(key, checkRules[key])){\n                            module.rightInput($element);\n                        }else{\n                            valid = false;\n                            module.errorInput($element, key, checkRules[key]);\n                            if(!opts.setting.fullyVerified){\n                                return valid;\n                            }\n                        }\n                    }\n                });\n            }\n            return valid;\n        };\n\n        return {\n            check : check\n        };\n    };\n})(jQuery);\n",";var adminJs = window.adminJs || {};\n\nadminJs.activity = {\n    init : function(){\n        adminJs.activity.front();\n    },\n\n    activityAddFormCheck : function(){\n        var $activityAddWrap = $('.js-activity-add');\n        if($activityAddWrap.length){\n            $activityAddWrap.on('submit', '.js-activity-add-form', function(e){\n                var activityCheck = $(this).autoCheckForm({\n                    name : 'required',\n                    path_alias : 'required',\n                    description : 'required',\n                    start_time : 'required',\n                    end_time : 'required'\n                }, {}, {errorPrefix:'sm_'});\n\n                var valid = activityCheck.check();\n                if(adminJs.pageVariables.check){\n                    valid = adminJs.pageVariables.check() && valid;\n                }\n                return valid;\n            });\n        }\n    },\n\n    activityEditFormCheck : function(){\n        var $activityAddWrap = $('.js-activity-edit');\n        if($activityAddWrap.length){\n            $activityAddWrap.on('submit', '.js-activity-edit-form', function(e){\n                var $this = $(this);\n                var activityCheck = $this.autoCheckForm({\n                    name : 'required',\n                    path_alias : 'required',\n                    description : 'required',\n                    start_time : 'required',\n                    end_time : 'required'\n                }, {}, {errorPrefix:'sm_'});\n\n                var valid = activityCheck.check();\n                if(adminJs.pageVariables.check){\n                    valid = adminJs.pageVariables.check() && valid;\n                }\n                if(valid){\n                    $this.find('.js-disabled').prop('disabled', false);\n                }\n                return valid;\n            });\n        }\n    },\n\n    promotionFromCheck : function(){\n        var $promotionForm = $('.js-promotion-form');\n        if($promotionForm.length && adminJs.promotionForm.check){\n            $promotionForm.on('submit', function(){\n                var valid = adminJs.promotionForm.check();\n                if(valid){\n                    $(this).find('.js-disabled').prop('disabled', false);\n                }\n                return valid;\n            });\n        }\n    },\n\n    couponFormCheck : function(){\n        var $couponForm = $('.js-coupon-form');\n        if($couponForm.length){\n            $couponForm.on('submit', function(){\n                var valid =  adminJs.couponForm.check();\n                if(valid){\n                    $(this).find('.js-disabled').prop('disabled', false);\n                }\n                return valid;\n            });\n        }\n    },\n\n    front : function(){\n        adminJs.activity.activityAddFormCheck();\n        adminJs.activity.activityEditFormCheck();\n        adminJs.activity.promotionFromCheck();\n        adminJs.activity.couponFormCheck();\n    }\n};","/**\n * Created by JKH on 2016/7/21.\n */\n\n;var adminJs=window.adminJs || {};\n\nadminJs.common={\n    init: function(){\n        var $removeLink = $('.js-remove-link');\n        if($removeLink.length){\n            $removeLink.on('click', function(e){\n                if(!confirm('Are you sure to delete?')){\n                    e.preventDefault();\n                }\n            });\n        }\n\n        var $select2 = $('.select2');\n        if($select2.length){\n            $select2.select2();\n        }\n\n        var $datepicker = $('.datepicker');\n        if($datepicker.length){\n            $datepicker.datepicker({\n                autoclose: true,\n                format: 'yyyy/mm/dd'\n            });\n        }\n    },\n\n    ajaxSetup: function () {\n        $.ajaxSetup({\n            headers: {\n                'X-CSRF-TOKEN': $('meta[name=\"csrf-token\"]').attr('content')\n            }\n        });\n    }\n};\n\n\n","/**\n * Created by JKH on 2016/7/22.\n */\n\n;var adminJs=window.adminJs || {};\n\nadminJs.componentTermSearch = {\n    init : function(){\n        adminJs.componentTermSearch.ajaxLogic();\n        adminJs.componentTermSearch.front();\n    },\n\n    termSearchRel : null,\n\n    front : function(){\n        var $componentWrap = $('.component-term-search');\n\n        $componentWrap.on('click', '.js-add-term-a', function(e){\n            e.preventDefault();\n\n            var $this = $(this);\n            var $termSelect = $('.term-select');\n\n            var tid = $this.data('tid');\n            var termSearchRel = adminJs.componentTermSearch.termSearchRel;\n\n            if(termSearchRel[tid] != undefined && $termSelect.find('option[value=\"'+tid+'\"]').length == 0){\n                $termSelect.append($('<option value=\"'+tid+'\" selected>'+termSearchRel[tid].name+'</option>'));\n            }\n            $this.closest('.js-term-tr').remove();\n        });\n\n        $componentWrap.on('click', '.js-clear-terms', function(e){\n            e.preventDefault();\n            $('.js-term-tr').remove();\n        });\n\n        $componentWrap.on('click', '.js-all-terms', function(e){\n            e.preventDefault();\n            $('.js-add-term-a').trigger('click');\n        });\n\n        $('.term-select').on('dblclick', 'option', function(){\n            var $this = $(this);\n            var tid = $this.attr('value');\n            if(!$('.js-ajax-rel-tr').hasClass('hide')){\n                var $termTable = $('.js-term-table');\n                var termSearchRel = adminJs.componentTermSearch.termSearchRel;\n\n                var tr = '<tr class=\"js-term-tr\">';\n                tr += '<td><a href=\"'+termSearchRel[tid].url+'\" target=\"_blank\">'+termSearchRel[tid].name+'</a></td>';\n                tr += '<td><a class=\"js-add-term-a\" href=\"#\" data-tid=\"'+tid+'\">Add this term</a></td>';\n                tr += '</tr>';\n                $termTable.append($(tr));\n            }\n            $this.remove();\n        });\n    },\n\n    ajaxLogic : function(){\n        adminJs.common.ajaxSetup();\n\n        var $keywordsInput = $('.js-keywords-input');\n\n        $keywordsInput.on('keydown', function(e){\n            if(e.which == 13) {\n                adminJs.componentTermSearch.ajaxTermSearch($(this));\n            }\n        });\n\n        $('.js-search-btn').on('click', function(){\n            adminJs.componentTermSearch.ajaxTermSearch($keywordsInput);\n        });\n\n    },\n\n    ajaxTermSearch : function($this){\n        var keywords = $.trim($this.val());\n        var request = $.ajax({\n            url : '/center/term/search',\n            type : 'POST',\n            data : {\n                'keywords' : keywords\n            },\n            dataType : 'json'\n        });\n\n        request.done(function(result){\n            if(result.code == 200){\n\n                var $emptyTr = $('.js-ajax-empty-tr');\n                var $relTr = $('.js-ajax-rel-tr');\n                var $termSelectTr = $('.js-term-select-tr');\n\n                if(result.data.length == 0){\n                    $emptyTr.removeClass('hide');\n                    $relTr.addClass('hide');\n                    $termSelectTr.addClass('hide');\n                }else {\n                    $emptyTr.addClass('hide');\n                    $relTr.removeClass('hide');\n                    $termSelectTr.removeClass('hide');\n\n                    adminJs.componentTermSearch.termSearchRel = result.data;\n\n                    var $termTable = $('.js-term-table');\n                    $('.js-term-tr').remove();\n                    $.each(result.data, function(index, element){\n                        var termTr = '<tr class=\"js-term-tr\">';\n                        termTr += '<td><a href=\"'+element.url+'\" target=\"_blank\">'+element.name+'</a></td>';\n                        termTr += '<td><a class=\"js-add-term-a\" href=\"#\" data-tid=\"'+element.tid+'\">Add this term</a></td>';\n                        termTr += '</tr>';\n                        $termTable.append($(termTr));\n                    });\n                }\n            }\n        });\n    }\n};\n",";var adminJs = window.adminJs || {};\nadminJs.constant = {\"activityRangeAll\":1,\"activityRangeTerm\":2,\"activityTypeTopic\":1,\"activityTypePromotion\":2,\"activityTypeCoupon\":3,\"promotionTypeProduct\":1,\"promotionTypeCart\":2,\"promotionBenefitDiscount\":1,\"promotionBenefitReduction\":2,\"promotionBenefitFree\":3,\"promotionLimitNone\":1,\"promotionLimitFUllPrice\":2,\"promotionLimitFUllNumber\":3,\"couponLimitNone\":1,\"couponLimitFullPrice\":2,\"couponLimitFullNumber\":3,\"couponStatusUnused\":0,\"couponStatusLocked\":1,\"couponStatusUsed\":2};",";var adminJs = window.adminJs || {};\n\nadminJs.couponForm = {\n    init : function(){\n        adminJs.couponForm.front();\n    },\n\n    check : null,\n\n    front : function(){\n        var $couponFromWrap = $('.coupon-form-wrap');\n        var $limitValueTr = $('.js-limit-value-tr');\n        var $limitValue = $('.js-limit-value');\n        $couponFromWrap.on('change', '.js-limit-select', function(){\n            var $this = $(this);\n            if($this.val() == 'no_limit'){\n                $limitValueTr.addClass('hide');\n            }else{\n                $limitValueTr.removeClass('hide');\n            }\n            $limitValue.val('');\n        });\n\n        adminJs.couponForm.check = $couponFromWrap.autoCheckForm({\n            name : 'required',\n            path_alias : 'required',\n            coupons_fee : 'required|number',\n            total : 'required|number'\n        },{},{errorPrefix:'sm_'}).check;\n    }\n};","\n;var adminJs=window.adminJs || {};\n\nadminJs.pageVariables = {\n    init : function(){\n        adminJs.pageVariables.front();\n    },\n\n    check : null,\n\n    front : function(){\n        var $pageVariableWrap = $('.js-page-variable');\n        if($pageVariableWrap.length){\n            adminJs.pageVariables.check = function(){\n                var pvid = $pageVariableWrap.find('[name=\"pvid\"]').val();\n                if(['1', '2', '3'].indexOf(pvid) == -1){\n                    return $pageVariableWrap.autoCheckForm({\n                        title : 'required',\n                        meta_keywords : 'required',\n                        meta_description : 'required'\n                    }, {}, {errorPrefix:'sm_'}).check();\n                }else{\n                    return true;\n                }\n            }\n        }\n\n        $pageVariableWrap.on('change', '.js-pvid-input', function(){\n            var $pageVariableTr = $('.page-variable-tr');\n            if(['1', '2', '3'].indexOf($(this).val()) > -1){\n                $pageVariableTr.addClass('hide');\n            }else{\n                $pageVariableTr.removeClass('hide');\n            }\n        });\n\n        $('.js-pvid-input').trigger('change');\n\n    }\n};",";var adminJs=window.adminJs || {};\n\nadminJs.promotionForm = {\n    init : function(){\n        adminJs.promotionForm.front();\n    },\n\n    frontPromotionMultipleCheck : function(){\n        var $multipleInput = $('.multiple-input');\n        if($multipleInput.is(':checked')){\n            if($typeSelect.val() != 'cart' || $limitSelect.val() != 'full_price' || $benefitSelect.val() != 'price_reduction'){\n                $multipleInput.prop('checked', false);\n                return false;\n            }\n        }\n        return true;\n    },\n\n    front : function(){\n        var $fromWrap = $('.promotion-form-wrap');\n        var $multipleInput = $('.multiple-input');\n        var $limitValueLabel = $('.limit-value-label');\n        var $benefitSelect = $('.benefit-select');\n        var $benefitValueLabel = $('.benefit-value-label');\n\n        $fromWrap.on('click', '.promotion-form-wrap', function(){\n            if(!adminJs.promotionForm.frontPromotionMultipleCheck()){\n                alert('Multiple does not support the promotion you choose');\n            }\n        });\n\n        $fromWrap.on('change', '.type-select', function(){\n            var $this = $(this);\n            var $cartProp = $('.cart-prop');\n            var $productProp = $('.product-prop');\n\n            if($this.val() == 'cart'){\n                $cartProp.removeClass('hide');\n                $productProp.addClass('hide');\n                $multipleInput.prop('disabled', false);\n                $benefitSelect.val('price_reduction')\n            }else if($this.val() ==  'product'){\n                $cartProp.addClass('hide');\n                $productProp.removeClass('hide');\n                $multipleInput.prop('disabled', true);\n                $benefitSelect.val( 'discount')\n            }\n            adminJs.promotionForm.frontPromotionMultipleCheck();\n            $benefitSelect.trigger('change');\n        });\n\n        $fromWrap.on('change', '.limit-select', function(){\n            var $this = $(this);\n            adminJs.promotionForm.frontPromotionMultipleCheck();\n            $('.js-limit-value').val('');\n            if($this.val() ==  'no_limit'){\n                $('.limit-value-tr').addClass('hide');\n            }else if($this.val() == 'full_price'){\n                $('.limit-value-tr').removeClass('hide');\n                $limitValueLabel.html('Required price');\n            }else if($this.val() == 'full_number'){\n                $('.limit-value-tr').removeClass('hide');\n                $limitValueLabel.html('Required number');\n            }\n        });\n\n        $fromWrap.on('change', '.benefit-select', function(){\n            var $this = $(this);\n            adminJs.promotionForm.frontPromotionMultipleCheck();\n            $('.js-benefit-value').val('');\n            if($this.val() ==  'discount'){\n                $benefitValueLabel.html('Discount');\n            }else if($this.val() == 'price_reduction'){\n                $benefitValueLabel.html('Reduced price');\n            }else if($this.val() == 'lower_free'){\n                $benefitValueLabel.html('Free product number');\n            }\n        });\n\n        adminJs.promotionForm.check = $fromWrap.autoCheckForm({\n            name : 'required',\n            benefit_value : 'required'\n        },{},{errorPrefix:'sm_'}).check;\n    },\n\n    check:null,\n};","\n;var adminJs=window.adminJs || {};\n\nadminJs.sidebar = {\n    init : function(){\n        adminJs.sidebar.menuSet();\n    },\n    menuSet : function(){\n\n        var $firstMenuList = $('.sidebar-menu>li');\n        var pathInfo = window.location.pathname;\n        if(pathInfo[0] == '/'){\n            pathInfo = pathInfo.substr(1);\n        }\n        var menuInfo = pathInfo.split('/');\n        var firstMenu = menuInfo[0] ? menuInfo[0] : 'home';\n        var secondMenu = menuInfo[1] ? menuInfo[1] : 'home';\n        var thirdMenu = menuInfo[2] ? menuInfo[2] : 'home';\n        $.each($firstMenuList, function(index, element){\n            var $this = $(element);\n            if($this.data('menu') == firstMenu){\n                $this.addClass('active');\n                $.each($this.find('li'), function(index2, element2){\n                    var $this2 = $(element2);\n                    if($this2.data('menu') == secondMenu){\n                        $this2.addClass('active');\n                    }\n                });\n            }\n        });\n\n        $.each($('.js-third-menu li'), function(index, element){\n            var $this = $(this);\n            if($this.data('menu') == thirdMenu){\n                $this.addClass('active');\n            }\n        });\n    }\n};","/**\n * Created by JKH on 2016/7/22.\n *\n * warning:This file in the last when the mergers.\n */\n\n!(function($){\n    /**\n     *\n     * @param {element} el  Feature detection\n     * @param {function} fn  Executive function\n     */\n    var init=function(el,fn){\n        if($(el).length) fn(el);\n    };\n\n    $(function(){\n        adminJs.common.init();\n        init('.main-sidebar', adminJs.sidebar.init);\n        init('.page-variable', adminJs.pageVariables.init);\n        init('.promotion-form-wrap', adminJs.promotionForm.init);\n        init('.coupon-form-wrap', adminJs.couponForm.init);\n\n        init('.component-term-search', adminJs.componentTermSearch.init);\n        init('.js-activity', adminJs.activity.init);\n    });\n})(jQuery);"],"sourceRoot":"/source/"}